/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const ChallengesLazyImport = createFileRoute('/challenges')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()
const VisulizationIndexLazyImport = createFileRoute('/visulization/')()
const VisulizationSortingLazyImport = createFileRoute('/visulization/sorting')()

// Create/Update Routes

const ChallengesLazyRoute = ChallengesLazyImport.update({
  path: '/challenges',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/challenges.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const VisulizationIndexLazyRoute = VisulizationIndexLazyImport.update({
  path: '/visulization/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/visulization/index.lazy').then((d) => d.Route),
)

const VisulizationSortingLazyRoute = VisulizationSortingLazyImport.update({
  path: '/visulization/sorting',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/visulization/sorting.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/challenges': {
      preLoaderRoute: typeof ChallengesLazyImport
      parentRoute: typeof rootRoute
    }
    '/visulization/sorting': {
      preLoaderRoute: typeof VisulizationSortingLazyImport
      parentRoute: typeof rootRoute
    }
    '/visulization/': {
      preLoaderRoute: typeof VisulizationIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  AboutLazyRoute,
  ChallengesLazyRoute,
  VisulizationSortingLazyRoute,
  VisulizationIndexLazyRoute,
])

/* prettier-ignore-end */
